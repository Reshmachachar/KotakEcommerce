<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-28T09:40:46 IST" name="Surefire suite" finished-at="2023-02-28T09:40:54 IST" duration-ms="7168">
    <groups>
      <group name="Smoke">
        <method signature="TC001_AccessTokenTest.getAccessToken()[pri:0, instance:EC_Negative_TestCase.TC001_AccessTokenTest@609cd4d8]" name="getAccessToken" class="EC_Negative_TestCase.TC001_AccessTokenTest"/>
        <method signature="TC001_AccessTokenTest.getAccessToken()[pri:0, instance:EC_Positive_TestCase.TC001_AccessTokenTest@1190200a]" name="getAccessToken" class="EC_Positive_TestCase.TC001_AccessTokenTest"/>
        <method signature="TC002_CreateProductTest.createProduct()[pri:0, instance:EC_Positive_TestCase.TC002_CreateProductTest@6a2f6f80]" name="createProduct" class="EC_Positive_TestCase.TC002_CreateProductTest"/>
        <method signature="TC003_CreateOrderTest.createOrder()[pri:0, instance:EC_Positive_TestCase.TC003_CreateOrderTest@45b4c3a9]" name="createOrder" class="EC_Positive_TestCase.TC003_CreateOrderTest"/>
        <method signature="TC004_ViewOrderTest.viewOrderDetails()[pri:0, instance:EC_Positive_TestCase.TC004_ViewOrderTest@399c4be1]" name="viewOrderDetails" class="EC_Positive_TestCase.TC004_ViewOrderTest"/>
        <method signature="TC005_DeleteProductTest.deleteProduct()[pri:0, instance:EC_Positive_TestCase.TC005_DeleteProductTest@291caca8]" name="deleteProduct" class="EC_Positive_TestCase.TC005_DeleteProductTest"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2023-02-28T09:40:46 IST" name="Surefire test" finished-at="2023-02-28T09:40:54 IST" duration-ms="7168">
      <class name="EC_Positive_TestCase.TC005_DeleteProductTest">
        <test-method signature="deleteProduct()[pri:0, instance:EC_Positive_TestCase.TC005_DeleteProductTest@291caca8]" started-at="2023-02-28T09:40:53 IST" name="deleteProduct" finished-at="2023-02-28T09:40:54 IST" duration-ms="412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteProduct -->
      </class> <!-- EC_Positive_TestCase.TC005_DeleteProductTest -->
      <class name="EC_Negative_TestCase.TC001_AccessTokenTest">
        <test-method signature="getAccessToken()[pri:0, instance:EC_Negative_TestCase.TC001_AccessTokenTest@609cd4d8]" started-at="2023-02-28T09:40:47 IST" name="getAccessToken" finished-at="2023-02-28T09:40:50 IST" duration-ms="3936" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <201> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at EC_Negative_TestCase.TC001_AccessTokenTest.getAccessToken(TC001_AccessTokenTest.java:34)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAccessToken -->
      </class> <!-- EC_Negative_TestCase.TC001_AccessTokenTest -->
      <class name="EC_Positive_TestCase.TC001_AccessTokenTest">
        <test-method signature="getAccessToken()[pri:0, instance:EC_Positive_TestCase.TC001_AccessTokenTest@1190200a]" started-at="2023-02-28T09:40:51 IST" name="getAccessToken" finished-at="2023-02-28T09:40:52 IST" duration-ms="1515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAccessToken -->
      </class> <!-- EC_Positive_TestCase.TC001_AccessTokenTest -->
      <class name="EC_Positive_TestCase.TC002_CreateProductTest">
        <test-method signature="createProduct()[pri:0, instance:EC_Positive_TestCase.TC002_CreateProductTest@6a2f6f80]" started-at="2023-02-28T09:40:52 IST" name="createProduct" finished-at="2023-02-28T09:40:53 IST" duration-ms="619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProduct -->
      </class> <!-- EC_Positive_TestCase.TC002_CreateProductTest -->
      <class name="EC_Positive_TestCase.TC003_CreateOrderTest">
        <test-method signature="createOrder()[pri:0, instance:EC_Positive_TestCase.TC003_CreateOrderTest@45b4c3a9]" started-at="2023-02-28T09:40:53 IST" name="createOrder" finished-at="2023-02-28T09:40:53 IST" duration-ms="339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrder -->
      </class> <!-- EC_Positive_TestCase.TC003_CreateOrderTest -->
      <class name="EC_Positive_TestCase.TC004_ViewOrderTest">
        <test-method signature="viewOrderDetails()[pri:0, instance:EC_Positive_TestCase.TC004_ViewOrderTest@399c4be1]" started-at="2023-02-28T09:40:53 IST" name="viewOrderDetails" finished-at="2023-02-28T09:40:53 IST" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewOrderDetails -->
      </class> <!-- EC_Positive_TestCase.TC004_ViewOrderTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
